{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>SuperSchema allows you to write the Terraform schema for resources and datasources in a single definition, along with a common field that enables you to define default values. SuperSchema is compatible with tfplugindocs.</p> <p>This is a try to solve these issues :</p> <ul> <li>Don't repeat yourself : common fields applied on resources and datasources.</li> <li>Auto format attributes markdown description with validators and plan modifiers descriptions, default values...</li> <li>Auto generate deprecated documentation for deprecated attributes.</li> </ul>"},{"location":"datasource_example/","title":"cloudavenue_iam_user (Data Source)","text":"<p>The user data source allows you to read users in Cloud Avenue.</p>"},{"location":"datasource_example/#schema","title":"Schema","text":""},{"location":"datasource_example/#optional","title":"Optional","text":"<ul> <li><code>id</code> (String) The ID of the user. Ensure that one and only one attribute from this collection is set : <code>name</code>, <code>id</code>.</li> <li><code>name</code> (String) The name of the user. Ensure that one and only one attribute from this collection is set : <code>name</code>, <code>id</code>.</li> </ul>"},{"location":"datasource_example/#read-only","title":"Read-Only","text":"<ul> <li><code>role_name</code> (String) The role assigned to the user.</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>The following is a technical documentation on how to use superschema in your Terraform project.</p>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>For installing the superschema, you can use the <code>go get</code> command:</p> <pre><code>go get github.com/orange-cloudavenue/terraform-plugin-framework-superschema@latest\n</code></pre>"},{"location":"getting-started/#how-to-use-it","title":"How to use it","text":"<p>Add to you golang imports :</p> <pre><code>import (\n  superschema \"github.com/orange-cloudavenue/terraform-plugin-framework-superschema\"\n)\n</code></pre> <p>Create, for example, a function witch define the superschema of your resource :</p> <pre><code>/*\nuserSchema\n\nThis function is used to create the schema for the user resource and datasource.\n*/\nfunc userSchema() superschema.Schema {\n return superschema.Schema{\n  Common: superschema.SchemaDetails{\n   MarkdownDescription: \"The user\",\n  },\n  Resource: superschema.SchemaDetails{\n   MarkdownDescription: \"resource allows you to manage local users in Cloud Avenue.\",\n  },\n  DataSource: superschema.SchemaDetails{\n   MarkdownDescription: \"data source allows you to read users in Cloud Avenue.\",\n  },\n  Attributes: map[string]superschema.Attribute{\n   \"id\": superschema.StringAttribute{\n    Common: &amp;schemaR.StringAttribute{\n     MarkdownDescription: \"The ID of the user.\",\n    },\n    Resource: &amp;schemaR.StringAttribute{\n     Computed: true,\n     PlanModifiers: []planmodifier.String{\n      stringplanmodifier.UseStateForUnknown(),\n     },\n    },\n    DataSource: &amp;schemaD.StringAttribute{\n     Optional: true,\n     Computed: true,\n     Validators: []validator.String{\n      stringvalidator.ExactlyOneOf(path.MatchRoot(\"name\"), path.MatchRoot(\"id\")),\n     },\n    },\n   },\n   \"name\": superschema.StringAttribute{\n    Common: &amp;schemaR.StringAttribute{\n     MarkdownDescription: \"The name of the user.\",\n    },\n    Resource: &amp;schemaR.StringAttribute{\n     Required: true,\n     PlanModifiers: []planmodifier.String{\n      stringplanmodifier.RequiresReplace(),\n     },\n    },\n    DataSource: &amp;schemaD.StringAttribute{\n     Optional: true,\n     Computed: true,\n     Validators: []validator.String{\n      stringvalidator.ExactlyOneOf(path.MatchRoot(\"name\"), path.MatchRoot(\"id\")),\n     },\n    },\n   },\n   \"role_name\": superschema.StringAttribute{\n    Common: &amp;schemaR.StringAttribute{\n     MarkdownDescription: \"The role assigned to the user.\",\n    },\n    Resource: &amp;schemaR.StringAttribute{\n     Required: true,\n    },\n    DataSource: &amp;schemaD.StringAttribute{\n     Computed: true,\n    },\n   },\n   \"password\": superschema.StringAttribute{\n    Resource: &amp;schemaR.StringAttribute{\n     MarkdownDescription: \"The user's password. This value is never returned on read.\",\n     Required:            true,\n     Sensitive:           true,\n    },\n   },\n   \"vdc_group\": superschema.StringAttribute{\n    Deprecated: &amp;superschema.Deprecated{\n     DeprecationMessage:                \"Remove the vdc_group attribute configuration as it replaced by the resource cloudavenue_vdc_group and the attribute will be removed in the version 0.12.0 of the provider.\",\n     ComputeMarkdownDeprecationMessage: true,\n     Removed:                           true,\n     FromAttributeName:                 \"vdc_group\",\n     TargetRelease:                     \"v0.12.0\",\n     LinkToMilestone:                   \"https://github.com/orange-cloudavenue/terraform-provider-cloudavenue/milestone/4\",\n     TargetResourceName:                \"cloudavenue_vdc_group\",\n     LinkToResourceDoc:                 \"https://registry.terraform.io/providers/orange-cloudavenue/cloudavenue/latest/docs/resources/vdc_group\",\n     LinkToIssue:                       \"https://github.com/orange-cloudavenue/terraform-provider-cloudavenue/issues/448\",\n    },\n    Resource: &amp;schemaR.StringAttribute{\n     MarkdownDescription: \"This can be an existing vDC group or a new one. This allows you to isolate your vDC.\\n\" +\n      \"VMs of vDCs which belong to the same vDC group can communicate together.\",\n     Optional: true,\n     PlanModifiers: []planmodifier.String{\n      stringplanmodifier.RequiresReplaceIfConfigured(),\n     },\n    },\n   },\n  },\n }\n}\n</code></pre> <p>Use the function in your resource and datasource :</p> <pre><code>// Schema defines the schema for the resource.\nfunc (r *userResource) Schema(ctx context.Context, _ resource.SchemaRequest, resp *resource.SchemaResponse) {\n resp.Schema = userSchema().GetResource(ctx)\n}\n</code></pre> <p>Look at the doc example for the generated documentation of this example :</p> <ul> <li>Resource documentation</li> <li>DataSource documentation</li> </ul>"},{"location":"logic/","title":"SuperSchema logic","text":""},{"location":"logic/#superschemaschema","title":"superschema.Schema","text":"<p>The superschema.Schema type has three fields: <code>Common</code>, <code>Resource</code>, and <code>DataSource</code>. By using these fields, you can set the description header of your Terraform resource and datasource. The superschema merges the common markdown description with the resource markdown description for the Terraform resource and the common markdown description with the datasource markdown description for the Terraform datasource.</p> <p>There is no need to add extra space in the markdown description. The superschema automatically adds necessary space on the merged markdown description. This same logic applies for DeprecationMessage.</p>"},{"location":"logic/#attributes","title":"Attributes","text":"<p>On the attributes side, the same logic applies for the <code>MarkdownDescription</code>, <code>Description</code>, and <code>DeprecationMessage</code>. If any of the <code>Computed</code>, <code>Required</code>, <code>Optional</code>, and <code>Sensitive</code> fields is <code>true</code> in <code>Common</code>, <code>Resource</code>, or <code>DataSource</code>, the value is <code>true</code>.</p> <p>Examples:</p> <ul> <li>If <code>Required</code> is <code>true</code> in <code>Common</code> and <code>false</code> in <code>Resource</code>, the result is a <code>Required: true</code> for the <code>Resource</code>.</li> <li>If <code>Required</code> is <code>false</code> in <code>Common</code> and <code>true</code> in <code>DataSource</code>, the result is a <code>Required: true</code> for the <code>DataSource</code>.</li> </ul>"},{"location":"logic/#validators","title":"Validators","text":"<p>The <code>Validators</code> are the sum of the <code>Common</code> and <code>Resource</code> or <code>DataSource</code> Validators. The validator markdown description is added to the markdown description of your attribute.</p>"},{"location":"logic/#planmodifiers","title":"PlanModifiers","text":"<p>The <code>PlanModifiers</code> are the sum of the <code>Common</code> and <code>Resource</code> or <code>DataSource</code> PlanModifiers. The plan modifier markdown description is added to the markdown description of your attribute with the following exceptions:</p> <ul> <li><code>UseStateForUnknown</code>: nothing is added.</li> <li><code>RequiresReplace</code>: <code>(ForceNew)</code> is added at the beginning of the markdown description.</li> </ul>"},{"location":"logic/#default-value","title":"Default Value","text":"<p>If you have a default value, the markdown description is ended with the markdown description of this default.</p>"},{"location":"logic/#deprecationmessage","title":"DeprecationMessage","text":"<p>The <code>DeprecationMessage</code> is the special field of the superschema. Is used to manage deprecation of attributes. List of possible values:</p> <pre><code>    // DeprecationMessage is the message to display in the CLI when the user\n // attempts to use the deprecated attribute.\n // This field is required.\n DeprecationMessage string\n\n // MarkdownDeprecationMessage is the message to display in the Documentation portal\n // when the user attempts to use the deprecated attribute.\n // This field is optional if ComputeMarkdownDeprecationMessage is false.\n MarkdownDeprecationMessage string\n\n // ComputeMarkdownDeprecationMessage is a flag to indicate whether the MarkdownDeprecationMessage\n // should be computed from the parameters of the Deprecated struct.\n ComputeMarkdownDeprecationMessage bool\n\n // Renamed is a flag to indicate whether the attribute has been renamed.\n // Removed is a flag to indicate whether the attribute has been removed.\n // One of these fields must be true.\n Renamed, Removed bool\n\n // FromAttributeName is the name of the attribute that has been deprecated.\n // This field is required if ComputeMarkdownDeprecationMessage is true.\n FromAttributeName string\n\n // TargetAttributeName is the name of the attribute that replaces the deprecated attribute.\n // TargetResourceName is the name of the resource that replaces the deprecated attribute.\n // These fields are optional if the attribute has been removed.\n TargetAttributeName, TargetResourceName string\n\n // TargetRelease is the release version in which the attribute was deprecated. (e.g. v1.0.0).\n // This field is Required.\n TargetRelease string\n // LinkToIssue is the link to the GitHub issue that describes the deprecation.\n // This field is optional.\n LinkToIssue string\n // LinkToResourceDoc is the link to the terraform documentation for the resource that replaces the deprecated attribute.\n // This field is optional.\n LinkToResourceDoc string\n // LinkToMilestone is the link to the GitHub milestone that describes the release in which the attribute was deprecated.\n // This field is optional.\n LinkToMilestone string\n</code></pre>"},{"location":"resource_example/","title":"cloudavenue_iam_user (Resource)","text":"<p>The user resource allows you to manage local users in Cloud Avenue.</p>"},{"location":"resource_example/#schema","title":"Schema","text":""},{"location":"resource_example/#required","title":"Required","text":"<ul> <li><code>name</code> (String) (ForceNew) The name of the user.</li> <li><code>password</code> (String, Sensitive) The user's password. This value is never returned on read.</li> <li><code>role_name</code> (String) The role assigned to the user.</li> </ul>"},{"location":"resource_example/#optional","title":"Optional","text":"<ul> <li><code>vdc_group</code> (String, Deprecated) (ForceNew) vDC group name. This can be an existing vDC group or a new one. This allows you to isolate your vDC. VMs of vDCs which belong to the same vDC group can communicate together.</li> </ul> <p>Attribute deprecated</p> <p>Remove the <code>vdc_group</code> attribute configuration as it replaced by the resource <code>cloudavenue_vdc_group</code> and the attribute will be removed in the version <code>v0.12.0</code> of the provider. See the GitHub issue for more information.</p>"},{"location":"resource_example/#read-only","title":"Read-Only","text":"<ul> <li><code>id</code> (String) The ID of the user.</li> </ul>"}]}